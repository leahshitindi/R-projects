kbl(caption = "Total count per group and Gender") %>%
kable_classic(full_width = F, html_font = "Cambria")
#Q5 reshape into long format
women_long <- women_sort %>%
gather(W,w,H,`?`,  key="Status",value="Freq")
head(women_long)
system.time(by_gender <- women_long %>%
group_by(Status,Gender) %>%
summarise(Total=sum(Freq)))
women_long <- women_sort %>%
gather(W,w,H,`?`,  key="Status",value="Freq")
head(women_long)
system.time(by_gender <- women_long %>%
group_by(Status,Gender) %>%
summarise(Total=sum(Freq)))
spread(by_gender,key=Status,value=Total) %>%
kbl(caption = "Total frequency of categories by  gender") %>%
kable_classic(full_width = F, html_font = "Cambria")
bar_chart <- women_long %>%
ggplot(mapping=aes(fill=Gender,y=Freq,x=Country))+
geom_bar(width=0.7, position=position_dodge(width = 0.9),
stat = 'identity')+
theme_minimal()+
labs(title=paste("Responses About Women with schoolchild work status per Country "),
y=paste("Frequency of Responses"))+
theme(legend.position="top",
axis.text.x = element_text( size =6, angle = 90,
hjust = .5, vjust = .5,))
print(bar_chart)
bar_chart <- women_long %>%
ggplot(mapping=aes(fill=Gender,y=Freq,x=Country))+
geom_bar(width=0.7, position=position_dodge(width = 0.9),
stat = 'identity')+
theme_minimal()+
labs(title=paste("Responses About Women with schoolchild work status per Country "),
y=paste("Frequency of Responses"))+
theme(legend.position="top",
axis.text.x = element_text( size =6, angle = 90,
hjust = .5, vjust = .5,))+
coord_flip()
print(bar_chart)
bar_chart <- women_long %>%
ggplot(mapping=aes(fill=Gender,y=Freq,x=Country))+
geom_bar(width=0.7, position=position_dodge(width = 0.9),
stat = 'identity')+
theme_minimal()+
labs(title=paste("Responses About Women with schoolchild work status per Country "),
y=paste("Frequency of Responses"))+
theme(legend.position="top",
axis.text.x = element_text( size =6, angle = 90,
hjust = .5, vjust = .5,))
print(bar_chart)
stacked_chart <- ggplot(women_long,aes(x=Gender,fill=Status,y=Freq))+
geom_bar(stat="identity")+
facet_wrap(~Country,nrow=4)+
theme_light()+
scale_fill_discrete(name="Women working status")+
labs(title=paste("Freqency of Responses About Women With SchoolChild \nby Country and Gender "),
y="Frequency")
print(stacked_chart)
plt <- xyplot(Sepal.Width ~ Sepal.Length, data = iris,
col = "blue", pch = 17)
print(plt)
plt <- xyplot(Sepal.Width ~ Sepal.Length, data = iris,
col = "blue", pch = 17)
library(lattice)
plt <- xyplot(Sepal.Width ~ Sepal.Length, data = iris,
col = "blue", pch = 17)
print(plt)
xyplot(Sepal.Width ~ Sepal.Length, data = iris,
par.settings = list(
plot.symbol = list(
col = "blue", pch = 17
)
)
)
print(xyplot(Sepal.Width ~ Sepal.Length, data = iris,
par.settings = list(
plot.symbol = list(
col = "blue", pch = 17
)
)
))
plt2 <- xyplot(Sepal.Width ~ Sepal.Length, data = iris,
par.settings = list(
plot.symbol = list(
col = "blue", pch = 17
)
)
)
print(plt2)
plt2 <- xyplot(Sepal.Width ~ Sepal.Length, data = iris,
par.settings = list(
plot.symbol = list(
col = "blue", pch = 0
)
)
)
print(plt2)
xyplot(Sepal.Width ~ Sepal.Length, data = iris,
par.settings = list(
plot.symbol = list(
col = "blue", pch = 17
)
)
)
xyplot(Sepal.Width ~ Sepal.Length | Species,
data = iris, layout = c(2, 2))
barchart(Freq~Gender|Country,data=women_long,layout=c(6,4))
print(stacked_chart)
GKTau(as.matrix(women[, 2:5]), rowResponse = FALSE)
source("GKTAU.R")
GKTau(as.matrix(women[,2:5]),rowResponse = FALSE)
source("GKTAU.R")
GKTau(as.matrix(women[,2:5]),rowResponse = FALSE)
GKTau <- function(x, rowResponse = TRUE) {
# function checks!
if(any(x<0) | !is.matrix(x))stop('x must be a matrix of positive values',call. = )
# 1: grand total
N <- sum(x)
# 2: relative frequency
p <- x/N
# 3: check whether the rows are the response or the columns
rho <- ifelse(rowResponse==TRUE,1,0)
n_j <- ncol(p)
n_i <- nrow(p)
# 4 Begin the function here with the given objects
#  inner sum of the numerator
inner_sum<- function(i){
(p[i,1:n_j]-rowSums(p)[i]*
colSums(p)[1:ncol(p)])^2/
(((rowSums(p)[i])^(1-rho))*((colSums(p)[1:ncol(p)])^rho))
}
# numerator part of the function
numerat<-sum(sapply(1:n_i,
function(i)inner_sum(i)))
# denominator part of the function
ssq_row <- sum(sapply(1:n_i,function(i)(rowSums(p)[i])^2))
ssq_col <- sum(sapply(1:n_j(p),function(j)(colSums(p)[j])^2))
denom <- 1-((ssq_row)^rho)*((ssq_col)^(1-rho))
# the whole function
tau <- numerat/denom
# set a class for the return
class(tau)<-"GKTau"
tau
#create a method print for GKTau class object
print.GKTau <- function(x,...){
cat(" Goodman-Kruskal tau:",x,sep="  ")
}
print(tau)
}
GKTau(as.matrix(women[, 2:5]), rowResponse = FALSE)
GKTau <- function(x, rowResponse = TRUE) {
# function checks!
if(any(x<0) | !is.matrix(x))stop('x must be a matrix of positive values',call. = )
# 1: grand total
N <- sum(x)
# 2: relative frequency
p <- x/N
# 3: check whether the rows are the response or the columns
rho <- ifelse(rowResponse==TRUE,1,0)
n_j <- ncol(p)
n_i <- nrow(p)
# 4 Begin the function here with the given objects
#  inner sum of the numerator
inner_sum<- function(i){
(p[i,1:n_j]-rowSums(p)[i]*
colSums(p)[1:ncol(p)])^2/
(((rowSums(p)[i])^(1-rho))*((colSums(p)[1:ncol(p)])^rho))
}
# numerator part of the function
numerat<-sum(sapply(1:n_i,
function(i)inner_sum(i)))
# denominator part of the function
ssq_row <- sum(sapply(1:n_i,function(i)(rowSums(p)[i])^2))
ssq_col <- sum(sapply(1:n_j,function(j)(colSums(p)[j])^2))
denom <- 1-((ssq_row)^rho)*((ssq_col)^(1-rho))
# the whole function
tau <- numerat/denom
# set a class for the return
class(tau)<-"GKTau"
tau
#create a method print for GKTau class object
print.GKTau <- function(x,...){
cat(" Goodman-Kruskal tau:",x,sep="  ")
}
print(tau)
}
GKTau(as.matrix(women[, 2:5]), rowResponse = FALSE)
head(as.matrix(,1:4))
head(as.matrix(women[,1:4]))
?coplot
head(mtcars)
coplot(mpg~disp|cyl,data=mtcars)
coplot(mpg~disp|cyl,data=mtcars,rows =2 )
coplot(mpg~disp|cyl,data=mtcars,rows =2,col=2 )
coplot(mpg~disp|cyl,data=mtcars,rows =2,col=1 )
coplot(mpg~disp|cyl,data=mtcars,rows =2,col=1 ,number = 3)
panel.smooth()
panel.smooth(disp,y=mpg)
loess()
coplot(mpg~disp|cyl,data=mtcars,rows =2,col=1 ,number = 3)
loess()
loess(mpg~disp)
coplot(mpg~disp|cyl,data=mtcars,rows =c(2,1) ,number = 3)
coplot(mpg~disp|cyl,data=mtcars,rows =3 ,number = 3)
coplot(mpg~disp|cyl,data=mtcars,rows =2 ,number = 3)
coplot(mpg~disp|cyl,data=mtcars,rows =2 ,number = 3)
head(mtcars)
loess.smooth(mpg~disp)
loess.smooth(mpg,disp)
loess.smooth(mtcars$disp,mtcars$mpg)
coplot(mpg~disp|cyl,data=mtcars,rows =2 ,number = 3)
loess.smooth(mtcars$disp,mtcars$mpg)
smooth(mtcars$disp,mtcars$mpg)
par()
par(oma=c(1,0,0,0))
coplot(mpg~disp|cyl,data=mtcars,rows =2 ,number = 3)
plt1 <- xyplot(mpg~disp,data=mtcars)
print(plt1)
object.size(plt1)
plt2 <- xyplot(mpg~disp|cyl,data=mtcars,layout=c(2,1))
plt2
plt2 <- xyplot(mpg~disp|cyl,data=mtcars,layout=c(1,2))
plt2
plt2 <- xyplot(mpg~disp|cyl,data=mtcars,layout=c(2,2))
plt2
mtcars$cyl <- factor(mtcars$cyl)
plt2 <- xyplot(mpg~disp|cyl,data=mtcars,layout=c(2,2))
plt2
mtcars$cyl <- factor(mtcars$cyl)
coplot(mpg~disp|cyl,data=mtcars,rows =2 ,number = 3)
coplot(mpg~disp|cyl,data=mtcars,rows =2 ,number = 3)
smooth(mtcars$disp,mtcars$mpg)
coplot(mpg~disp|factor(cyl),data=mtcars,rows =2 ,number = 3)
plt2 <- xyplot(mpg~disp|factor(cyl),data=mtcars,layout=c(2,2))
plt2 <- xyplot(mpg~disp|factor(cyl),data=mtcars,layout=c(2,2));plt2
object.size(plt2)
plt2 <- xyplot(mpg~disp|factor(cyl),data=mtcars,layout=c(2,2),
panel=function(x,y...){
panel.loess(x,y...)
});plt2
plt2 <- xyplot(mpg~disp|factor(cyl),data=mtcars,layout=c(2,2),
panel=function(x,y...){
panel.loess(x,y,...)
});plt2
xyplot(Sepal.Width ~ Sepal.Length | Species,
data = iris,
panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.loess(x, y, ...)
})
plt2 <- xyplot(mpg~disp|cyl,
data=mtcars,layout=c(2,2),
panel=function(x,y...){
panel.loess(x,y,...)
})
plt2
plt2 <- xyplot(mpg~disp|cyl,
data=mtcars,layout=c(2,2),
panel=function(x,y...){
panel.xyplot(x,y,...)
panel.loess(x,y,...)
})
plt2
plt2
xyplot(mpg ~ disp | cyl,
data = mtcars,
panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.loess(x, y, ...)
})
plt2 <- xyplot(mpg~disp|cyl,
data=mtcars,layout=c(2,2),
panel=function(x,y,...){
panel.xyplot(x,y,...)
panel.loess(x,y,...)
})
plt2
object.size(plt3)
plt3 <- xyplot(mpg~disp|cyl,
data=mtcars,layout=c(2,2),
panel=function(x,y,...){
panel.xyplot(x,y,...)
panel.loess(x,y,...)
})
object.size(plt3)
library(ggplot)
library(ggplot2)
ggplot(mtcars,aes(x=disp,y=mpg))+
geom_point()
object.size(plt3)
object.size(plt4)
plt4 <- ggplot(mtcars,aes(x=disp,y=mpg))+
geom_point()
plt4 <- ggplot(mtcars,aes(x=disp,y=mpg))+
geom_point()
object.size(plt4)
plt6 <- plt4+facet_wrap(~cyl)
plt6
plt6 <- plt4+facet_wrap(~cyl,nrow =2 )
plt6
plt6 <- plt4+facet_wrap(~cyl,ncol =2 )
plt6
plt6 <- plt4+facet_wrap(~cyl,ncol =c(1,2) )
plt6
plt6 <- plt4+facet_wrap(~cyl,ncol=1 )
plt6
plt6 <- plt4+facet_wrap(~cyl,nrow=1,ncol=2 )
plt6
plt6 <- plt4+facet_wrap(~cyl,nrow=2,ncol=2 )
plt6
plt7 <- plt6+geom_smooth()
plt7
plt7 <- plt6+geom_smooth(se=FALSE)
plt7
plt6 <- plt4+facet_wrap(mpg~cyl,nrow=2,ncol=2 )
plt6
plt6 <- plt4+facet_wrap(~cyl,nrow=2,ncol=2 )
plt6 <- plt4+facet_wrap(~cyl,nrow=2,ncol=2 );plt6
plt7 <- plt6+geom_smooth(se=FALSE);plt7
plt6 <- plt4+facet_wrap(~factor(cyl),nrow=2,ncol=2 );plt6
GKTau(as.matrix(women[, 2:5]), rowResponse = FALSE)
head(as.matrix(women[,1:4]))
GKTau(as.matrix(women[, 2:5]), rowResponse = FALSE)
plt7 <- plt6+geom_smooth(se=FALSE);plt7
coplot(mpg~disp|factor(cyl),data=mtcars,rows =2 ,number = 3)
?coplot
coplot(mpg~disp|factor(cyl),data=mtcars,rows =2 ,number = 3,show.given = FALSE)
coplot(mpg~disp|factor(cyl),data=mtcars,rows =2 ,number = 3,show.given = FALSE,
panel=function(x,y,...{
panel.loess(x,y,...)
}))
coplot(mpg~disp|factor(cyl),data=mtcars,rows =2 ,number = 3,show.given = FALSE,
panel=function(x,y,...{
panel.loess(x,y,...)
}
))
plt1 <- xyplot(mpg~disp,data=mtcars)
coplot(mpg~disp|factor(cyl),data=mtcars,rows =2 ,number = 3,show.given = FALSE,
panel=function(x,y,...){
panel.loess(x,y,...)
}
))
coplot(mpg~disp|factor(cyl),data=mtcars,rows =2 ,number = 3,
show.given = FALSE,
panel=function(x,y,...){
panel.loess(x,y,...)
})
women_tb <- women_tb %>%
separate(CountryGender,c("Country","Gender"),sep=-1);head(women_tb)
women<- read_xls(here("women2.xls"))
names(women)[1] <- "CountryGender"# rename the first column for convenience
women_tb <- women
women_tb <- women_tb %>%
separate(CountryGender,c("Country","Gender"),sep=-1);head(women_tb)
(women_sort <- women_tb %>% arrange(Country))
(women_sort <- women_tb %>% arrange(Country));head(women_sort,3)
(women_sort <- women_tb %>% arrange(Country));head(women_sort,3);tail(women_sort,3)
head(women_sort,3);tail(women_sort,3)
system.time(total <- women_sort %>%
group_by(Gender) %>%
summarise(W=sum(W),w=sum(w),H=sum(H),`?`=sum(women_sort$`?`)))
total %>%
kbl(caption = "Total count per group and Gender") %>%
kable_classic(full_width = F, html_font = "Cambria")
total %>%
kbl(caption = "Total Count Per Gender and Group") %>%
kable_classic(full_width = F, html_font = "Cambria")
women_long <- women_sort %>%
gather(W,w,H,`?`,  key="Status",value="Freq");head(women_long,3)
women_long <- women_sort %>%
gather(W,w,H,`?`,  key="Work",value="Freq");head(women_long,3)
system.time(by_gender <- women_long %>%
group_by(Work,Gender) %>%
summarise(Total=sum(Freq)))
spread(by_gender,key=Work,value=Total) %>%
kbl(caption = "Total Frequency of Work Status Categories By  Gender") %>%
kable_classic(full_width = F, html_font = "Cambria")
bar_chart <- women_long %>%
ggplot(mapping=aes(fill=Gender,y=Freq,x=Country))+
geom_bar(width=0.7, position=position_dodge(width = 0.9),
stat = 'identity')+
theme_minimal()+
labs(title=paste("Responses About Women with schoolchild work status per Country "),
y=paste("Frequency of Responses"))+
theme(legend.position="top",
axis.text.x = element_text( size =6, angle = 90,
hjust = .5, vjust = .5,))
print(bar_chart)
bar_chart <- women_long %>%
ggplot(mapping=aes(fill=Gender,y=Freq,x=Country))+
geom_bar(width=0.7, position=position_dodge(width = 0.9),
stat = 'identity')+
theme_minimal()+
labs(title=paste("Responses About Women with schoolchild work status per Country "),
y=paste("Frequency of Responses"))+
theme(legend.position="top",
axis.text.x = element_text( size =6, angle = 90,
hjust = .5, vjust = .5,))
print(bar_chart)
stacked_chart <- ggplot(women_long,aes(x=Gender,fill=Status,y=Freq))+
geom_bar(stat="identity")+
facet_wrap(~Country,nrow=4)+
theme_light()+
scale_fill_discrete(name="Women working status")+
labs(title=paste("Freqency of Responses About Women With SchoolChild \nby Country and Gender "),
y="Frequency")
print(stacked_chart)
# stacked bar chart
stacked_chart <- ggplot(women_long,aes(x=Gender,fill=Work,y=Freq))+
geom_bar(stat="identity")+
facet_wrap(~Country,nrow=4)+
theme_light()+
scale_fill_discrete(name="Women working status")+
labs(title=paste("Freqency of Responses About Women With SchoolChild \nby Country and Gender "),
y="Frequency")
print(stacked_chart)
stacked_chart <- ggplot(women_long,aes(x=Gender,fill=Work,y=Freq))+
geom_bar(stat="identity")+
facet_wrap(~Country,nrow=4)+
theme_light()+
scale_fill_discrete(name="Women working status")+
labs(title=paste("Freqency of Responses About Women With SchoolChild \Working Status by Country and Gender "),
y="Frequency")
print(stacked_chart)
# stacked bar chart
stacked_chart <- ggplot(women_long,aes(x=Gender,fill=Work,y=Freq))+
geom_bar(stat="identity")+
facet_wrap(~Country,nrow=4)+
theme_light()+
scale_fill_discrete(name="Women working status")+
labs(title=paste("Freqency of Responses About Women With SchoolChild \nWorking Status by Country and Gender "),
y="Frequency")
print(stacked_chart)
source("GKTAU.R")
GKTau(as.matrix(women[,2:5]),rowResponse = FALSE)
GKTau <- function(x, rowResponse = TRUE) {
# function checks!
if(any(x<0) | !is.matrix(x))stop('x must be a matrix of positive values',call. = )
# 1: grand total
N <- sum(x)
# 2: relative frequency
p <- x/N
# 3: check whether the rows are the response or the columns
rho <- ifelse(rowResponse==TRUE,1,0)
n_j <- ncol(p)
n_i <- nrow(p)
#  inner sum of the numerator
inner_sum<- function(i){
(p[i,1:n_j]-rowSums(p)[i]*
colSums(p)[1:ncol(p)])^2/
(((rowSums(p)[i])^(1-rho))*((colSums(p)[1:ncol(p)])^rho))
}
# numerator part of the function
numerat<-sum(sapply(1:n_i,
function(i)inner_sum(i)))
# denominator part of the function
ssq_row <- sum(sapply(1:n_i,function(i)(rowSums(p)[i])^2))
ssq_col <- sum(sapply(1:n_j,function(j)(colSums(p)[j])^2))
denom <- 1-((ssq_row)^rho)*((ssq_col)^(1-rho))
tau <- numerat/denom
# set a class for the return
class(tau)<-"GKTau"
tau
#create a method print for GKTau class object
print.GKTau <- function(x,...){
cat(" Goodman-Kruskal tau:",x,sep="  ")
}
print(tau)
}
GKTau(as.matrix(women[, 2:5]), rowResponse = FALSE)
GKTau <- function(x, rowResponse = TRUE) {
# function checks!
if(any(x<0) | !is.matrix(x))stop('x must be a matrix of positive values',call. = )
# 1: grand total
N <- sum(x)
# 2: relative frequency
p <- x/N
# 3: check whether the rows are the response or the columns
rho <- ifelse(rowResponse==TRUE,1,0)
n_j <- ncol(p)
n_i <- nrow(p)
#  inner sum of the numerator
inner_sum<- function(i){
(p[i,1:n_j]-rowSums(p)[i]*
colSums(p)[1:ncol(p)])^2/
(((rowSums(p)[i])^(1-rho))*((colSums(p)[1:ncol(p)])^rho))
}
# numerator part of the function
numerat<-sum(sapply(1:n_i,
function(i)inner_sum(i)))
# denominator part of the function
ssq_row <- sum(sapply(1:n_i,function(i)(rowSums(p)[i])^2))
ssq_col <- sum(sapply(1:n_j,function(j)(colSums(p)[j])^2))
denom <- 1-((ssq_row)^rho)*((ssq_col)^(1-rho))
tau <- numerat/denom
# set a class for the return
class(tau)<-"GKTau"
#create a method print for GKTau class object
print.GKTau <- function(x,...){
cat(" Goodman-Kruskal tau:",x,sep="  ")
}
print(tau)
}
GKTau(as.matrix(women[, 2:5]), rowResponse = FALSE)
(-3.26355)+(-1,1)*qt(0.975,31)*1.45453
-3.26355+(-1,1)*qt(0.975,31)*1.45453/sqrt(33)
-3.26355+c(-1,1)*qt(0.975,31)*1.45453/sqrt(33)
-3.26355+c(-1,1)*qt(0.975,31)*1.45453
sqrt(1.397)
sqrt(0.1397)
